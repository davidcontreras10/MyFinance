@using System.Linq
@model MyFinanceWebApp.Models.AccountDetailsViewPageModel
@{
	Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>My Finance - Accounts</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0" />
    <link rel="icon" href="~/Content/images/FinanceIcon.ico" />
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-theme.min.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />

    <link href="~/Content/jquery.gridster.css" rel="stylesheet" />
    <link href="~/Content/Views/account-index.css" rel="stylesheet" />
    <link href="~/Content/Views/account-detail-partial-view.css" rel="stylesheet" />

    @*    <link href="@Url.Content("~/Content/jquery.gridster.css")" rel="stylesheet" type="text/css"/>
        <link href="@Url.Content("~/Content/Views/account-index.css")" rel="stylesheet" type="text/css"/>
        <link href="@Url.Content("~/Content/Views/account-detail-partial-view.css")" rel="stylesheet" type="text/css"/>*@


    @Scripts.Render("~/Scripts/jquery-1.9.1.js")
    @Scripts.Render("~/Scripts/utils/utilities.js")

    @Scripts.Render("~/Scripts/moment.min.js")
    @Scripts.Render("~/Scripts/bootstrap.js")
    @Scripts.Render("~/Scripts/moment.min.js")
    @Scripts.Render("~/Scripts/bootstrap-multiselect.js")
    @Scripts.Render("~/Scripts/bootstrap-multiselect-collapsible-groups.js")

    @Scripts.Render("~/Scripts/jquery.gridster.js")
    @Scripts.Render("~/Scripts/gridster-custom.js")
    @Scripts.Render("~/Scripts/gridster-responsive.js")
    @Scripts.Render("~/Scripts/Views/account-index.js")
    @Scripts.Render("~/Scripts/Views/account-detail-partial-view.js")
    @Scripts.Render("~/Scripts/Views/account-group-partial-view.js")

    <script type="text/javascript">
		var siteRoot = '@Request.ApplicationPath';
    </script>
</head>
<body>
	<div>
		@{Html.RenderPartial("MainHeader", Model);}
	</div>

	<div id="account-group-modal" class="modal fade" role="dialog" style="overflow-y: auto;">
		<div class="modal-dialog modal-lg">
			<!-- Modal content-->
			<div class="modal-content">
				<div id="account-group-modal-header-id" class="modal-header">
					<button type="button" class="close" data-dismiss="modal">&times;</button>
					<h4 id="account-group-model-title-h4" class="modal-title">Account Groups</h4>
				</div>
				<div class="modal-body">
					@{Html.RenderPartial("AccountGroupPartialView");}
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
					<button type="button" class="btn btn-default" id="account-group-modal-button" onclick="submitAccountGroupValues()">Save</button>
				</div>
			</div>
		</div>
	</div>

	<div id="account-detail-modal" class="modal fade" role="dialog" style="overflow-y: auto;">
		<div class="modal-dialog modal-lg">
			<!-- Modal content-->
			<div class="modal-content">
				<div id="account-detail-modal-header-id" class="modal-header">
					<button type="button" class="close" data-dismiss="modal">&times;</button>
					<h4 id="account-detail-model-title-h4" class="modal-title">Account Details</h4>
				</div>
				<div class="modal-body">
					@{Html.RenderPartial("AccountDetailPartialView");}
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
					<button type="button" class="btn btn-default" id="account-detail-modal-button" onclick="submitAccountDetailWindow()">Save</button>
				</div>
			</div>
		</div>
	</div>

	@using (Html.BeginForm("index", "Account", FormMethod.Get, new { id = "account-form" }))
 {
 }

	<div id="account-group-div">
		<label id="account-group-label" for="account-group-select">Account Group</label>
		<select id="account-group-select" class="account-select">
			@{
				foreach (var groupViewModel in Model.Model.AccountGroupViewModels)
				{
				<option value="@groupViewModel.AccountGroupId"@(groupViewModel.IsSelected ? " selected='selected'" : "")>
					@groupViewModel.AccountGroupName
				</option>
				}
			}
		</select>
	</div>

	<div id="wrapper" style="">
		<div class="gridster">
			<ul style="margin-left: auto; margin-right: auto;">
				@{
					var count = 0;
					foreach (var account in Model.Model.AccountDetailsViewModels.OrderBy(i => i.AccountPosition))
					{
						var rowNumber = (count / 2) + 1;
						var columnNumber = count % 2 == 0 ? 1 : 3;
					<li id="account-widget-@account.AccountId" data-row="@rowNumber" data-col="@columnNumber" data-sizex="2" data-sizey="1" class="account-widget">
						<div class="center-element">
							@account.AccountName

							<br />
							@*<input type="button" value="Details" onclick="editAccount(@account.AccountId)"/>*@
							@*<img src="../../Content/images/edit.png" alt="HTML5 Icon" class="edit-icon">*@
							<input type="image" src="@Url.Content("~/Content/images/edit.png")" class="edit-icon" onclick="loadAccountDetails(@account.AccountId)"/>
							<input type="image" src="@Url.Content("~/Content/images/delete.png")" class="edit-icon" onclick="deleteAccount(@account.AccountId)"/>
						</div>
					</li>
						count++;
					}
				}
			</ul>
		</div>
	</div>
</body>
</html>
